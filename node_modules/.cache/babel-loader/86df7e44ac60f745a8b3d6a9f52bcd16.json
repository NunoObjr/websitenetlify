{"ast":null,"code":"var _jsxFileName = \"/Users/fasm/TheBruxoTales/theGeekAwaken/The-Geek-Awaken/frontend/src/pages/postCatView.js\";\nimport React from 'react';\nimport MenuBar from \"../components/menuBar\";\nimport Banner from \"../components/banner\";\nimport firebase from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nexport default function PostCatView() {\n  const [postId, setPostId] = React.useState(null);\n  const [post, setPost] = React.useState({\n    images: '',\n    textos: '',\n    titulos: ''\n  });\n  const [vetor, setVetor] = React.useState([]);\n  const [obras, setObras] = React.useState([]);\n\n  async function carregarDados() {\n    let str = '';\n\n    for (var i = 0; i < window.location.search.length; i++) {\n      if (i > 3) {\n        str = `${str}` + `${window.location.search[i]}`;\n      }\n    }\n\n    let obrasAux = [];\n    await firebase.database().ref(`posts/categorias/${str.toLowerCase()}`).once('value').then(function (snapshot) {\n      Object.keys(snapshot.val()).forEach(function (postFeed) {\n        obrasAux.push({\n          nomeDaObra: postFeed,\n          images: snapshot.val()[postFeed].fotos,\n          titulos: snapshot.val()[postFeed].titulos,\n          textos: snapshot.val()[postFeed].textos,\n          imagem: snapshot.val()[postFeed].imagem\n        });\n      });\n    });\n    setObras(obrasAux);\n    setPost({\n      titulos: '',\n      images: '',\n      textos: ''\n    });\n    setPostId(str);\n    setVetor([]);\n  }\n\n  React.useEffect(() => {\n    carregarDados();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MenuBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerPost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, obras.map((obra, key) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/postFront\",\n      state: {\n        post: obra\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 61\n    }\n  }, obra.nomeDaObra)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: obra.imagem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 61\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/fasm/TheBruxoTales/theGeekAwaken/The-Geek-Awaken/frontend/src/pages/postCatView.js"],"names":["React","MenuBar","Banner","firebase","Link","PostCatView","postId","setPostId","useState","post","setPost","images","textos","titulos","vetor","setVetor","obras","setObras","carregarDados","str","i","window","location","search","length","obrasAux","database","ref","toLowerCase","once","then","snapshot","Object","keys","val","forEach","postFeed","push","nomeDaObra","fotos","imagem","useEffect","map","obra","key","pathname","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MenuBar from \"../components/menuBar\"\nimport Banner from \"../components/banner\"\nimport firebase from \"../firebase\"\nimport { Link } from \"react-router-dom\"\nimport \"./styles.css\"\n\nexport default function PostCatView(){\n\n    const [postId, setPostId] = React.useState(null);\n    const [post, setPost] = React.useState({images:'', textos:'', titulos:''});\n    const [vetor,setVetor] = React.useState([])\n    const [obras, setObras] = React.useState([])\n\n    async function carregarDados(){\n        let str = '';\n        for(var i =0; i<window.location.search.length;i++){\n            if(i>3){\n                str = `${str}` + `${window.location.search[i]}`\n            }\n        }\n        let obrasAux = []; \n        await firebase.database().ref(`posts/categorias/${str.toLowerCase()}`).once('value').\n        then(function(snapshot){\n            Object.keys(snapshot.val()).forEach(function(postFeed){\n                obrasAux.push({nomeDaObra:postFeed,images:snapshot.val()[postFeed].fotos,\n                    titulos:snapshot.val()[postFeed].titulos,textos:snapshot.val()[postFeed].textos,imagem:snapshot.val()[postFeed].imagem})\n            })\n\n            \n        })\n        setObras(obrasAux)\n        setPost({titulos:'',images:'',textos:''})\n        setPostId(str)\n        setVetor([])\n    }\n\n    React.useEffect(()=>{\n        carregarDados();\n    },[])\n\n    return(\n        <div>\n            <Banner/>\n            <MenuBar/>\n            <div className=\"containerPost\">\n            {obras.map((obra,key)=>(\n                    <>\n                        <Link to={{pathname:\"/postFront\",state:{post:obra}}}>\n                            <div className=\"containerTitle\"><h1>{obra.nomeDaObra}</h1></div>\n                            <div className=\"containerImage\"><img src={obra.imagem}/></div>\n                        </Link>\n                    </>\n                ))}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}