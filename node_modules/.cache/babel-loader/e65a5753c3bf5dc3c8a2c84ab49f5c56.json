{"ast":null,"code":"var _jsxFileName = \"/Users/fasm/TheBruxoTales/theGeekAwaken/The-Geek-Awaken/frontend/src/components/reviewsR.js\";\nimport React from 'react';\nimport firebase from \"../firebase\";\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nexport default function ReviewsRecentes() {\n  const [vetorStorage, setVetorStorage] = React.useState([]);\n  const [vetor, setVetor] = React.useState([]);\n  const [vetorCats, setVetorCats] = React.useState([]);\n  const [contador, setContador] = React.useState(0);\n\n  async function carregarDados() {\n    let vetorPostsFeedID = [];\n    /*await firebase.database().ref(`posts/feed`).once('value').then(function(snapshot){\n        Object.keys(snapshot.val()).forEach(function(postFeed){\n            vetorPostsFeedID.push(snapshot.val()[postFeed])\n        })\n    })*/\n\n    vetorPostsFeedID = [{\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }, {\n      id: \"id\",\n      titulo: \"titulo\",\n      sinopse: \"sinopse\"\n    }];\n    let vetorAux = [];\n    let cont = contador;\n\n    for (cont; cont < vetorPostsFeedID.length; cont++) {\n      if (cont < 4) {\n        vetorAux.push(vetorPostsFeedID[cont]);\n      }\n    }\n\n    setContador(4);\n    setVetorCats(vetorAux);\n    setVetorStorage(vetorPostsFeedID);\n    console.log(vetorAux);\n  }\n\n  React.useEffect(() => {\n    carregarDados();\n  }, []);\n\n  function handleClick(id) {\n    window.location = `/postView?id=${id}`;\n  }\n\n  function verMais() {\n    let vetorAux = [];\n    let cont = contador;\n    let aux = 0;\n    let i = 0;\n    vetorAux = [...vetorCats];\n\n    if (vetorStorage.length - cont < 4) {\n      cont--;\n      aux = vetorStorage.length - cont;\n\n      for (let t = 0; t < aux; t++) {\n        vetorAux.push(vetorStorage[cont]);\n        cont++;\n      }\n    } else {\n      for (cont; cont < vetorStorage.length; cont++) {\n        i++;\n\n        if (i < 4) {\n          vetorAux.push(vetorStorage[cont]);\n        }\n      }\n    }\n\n    aux != 0 ? setContador(contador + aux) : setContador(contador + 4);\n    setVetorCats(vetorAux);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerReviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Postagens recentes\"), vetorCats.map((cat, key) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: 'none'\n    },\n    to: {\n      pathname: '/postView',\n      state: {\n        post: cat\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: key,\n    className: \"cardImage\",\n    alt: \"imagem do card\",\n    src: cat.imagem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 113\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    key: key,\n    onClick: () => handleClick(cat.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, cat.titulo), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, cat.sinopse)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"verMaisContainer\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => verMais(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Ver mais\")));\n} //<h2 className='cardTitle'>{cat.title}</h2>\n\n/*hexagono css .nota {\n    width: 50px;\n    height: 27px;\n    background: red;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n    background-color: red;\n    margin-left: 16%;\n  }\n.nota h3 {\n    font: 900 25px Roboto, sans-serif;\n    -webkit-font-smoothing: antialised;\n    color: white;\n}\n.nota:before {\n    content: \"\";\n    position: absolute;\n    top: -13px;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-left: 25px solid transparent;\n    border-right: 25px solid transparent;\n    border-bottom: 13px solid red;\n    \n  }\n.nota:after {\n    content: \"\";\n    position: absolute;\n    bottom: -13px;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-left: 25px solid transparent;\n    border-right: 25px solid transparent;\n    border-top: 13px solid red;\n\n\nHEXAGONO CODIGO: \n<div className='nota'>\n                        <h3>10</h3>\n                    </div>\n}*/","map":{"version":3,"sources":["/Users/fasm/TheBruxoTales/theGeekAwaken/The-Geek-Awaken/frontend/src/components/reviewsR.js"],"names":["React","firebase","Link","ReviewsRecentes","vetorStorage","setVetorStorage","useState","vetor","setVetor","vetorCats","setVetorCats","contador","setContador","carregarDados","vetorPostsFeedID","id","titulo","sinopse","vetorAux","cont","length","push","console","log","useEffect","handleClick","window","location","verMais","aux","i","t","map","cat","key","textDecoration","pathname","state","post","imagem","overflowY","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,eAAT,GAA2B;AACtC,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAvC;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAzB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACM,QAAN,CAAe,CAAf,CAAhC;;AAEA,iBAAeO,aAAf,GAA8B;AAC1B,QAAIC,gBAAgB,GAAG,EAAvB;AACA;;;;;;AAKAA,IAAAA,gBAAgB,GAAC,CAAC;AAACC,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAD,EAA6C;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAA7C,EAAyF;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAzF,EAAqI;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAArI,EAAiL;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAjL,EAA6N;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAA7N,EAAyQ;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAzQ,EAAqT;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAArT,EAAiW;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAjW,EAA6Y;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAA7Y,EAAyb;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAzb,EAAqe;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAre,EAAihB;AAACF,MAAAA,EAAE,EAAC,IAAJ;AAASC,MAAAA,MAAM,EAAC,QAAhB;AAAyBC,MAAAA,OAAO,EAAC;AAAjC,KAAjhB,CAAjB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,IAAI,GAAGR,QAAX;;AACA,SAAIQ,IAAJ,EAAUA,IAAI,GAACL,gBAAgB,CAACM,MAAhC,EAAuCD,IAAI,EAA3C,EAA8C;AAC1C,UAAGA,IAAI,GAAC,CAAR,EAAU;AACND,QAAAA,QAAQ,CAACG,IAAT,CAAcP,gBAAgB,CAACK,IAAD,CAA9B;AACH;AACJ;;AACDP,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,IAAAA,YAAY,CAACQ,QAAD,CAAZ;AACAb,IAAAA,eAAe,CAACS,gBAAD,CAAf;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH;;AAEDlB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAI;AAChBX,IAAAA,aAAa;AAChB,GAFD,EAEE,EAFF;;AAIA,WAASY,WAAT,CAAqBV,EAArB,EAAyB;AACrBW,IAAAA,MAAM,CAACC,QAAP,GAAmB,gBAAeZ,EAAG,EAArC;AACH;;AAED,WAASa,OAAT,GAAmB;AACf,QAAIV,QAAQ,GAAG,EAAf;AACA,QAAIC,IAAI,GAAGR,QAAX;AACA,QAAIkB,GAAG,GAAG,CAAV;AACA,QAAIC,CAAC,GAAG,CAAR;AACAZ,IAAAA,QAAQ,GAAC,CAAC,GAAGT,SAAJ,CAAT;;AACA,QAAGL,YAAY,CAACgB,MAAb,GAAsBD,IAAtB,GAA6B,CAAhC,EAAkC;AAC9BA,MAAAA,IAAI;AACJU,MAAAA,GAAG,GAAGzB,YAAY,CAACgB,MAAb,GAAsBD,IAA5B;;AACA,WAAI,IAAIY,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,GAAf,EAAmBE,CAAC,EAApB,EAAuB;AACnBb,QAAAA,QAAQ,CAACG,IAAT,CAAcjB,YAAY,CAACe,IAAD,CAA1B;AACAA,QAAAA,IAAI;AACP;AACJ,KAPD,MAQI;AACA,WAAIA,IAAJ,EAAUA,IAAI,GAACf,YAAY,CAACgB,MAA5B,EAAmCD,IAAI,EAAvC,EAA0C;AACtCW,QAAAA,CAAC;;AACD,YAAGA,CAAC,GAAC,CAAL,EAAO;AACHZ,UAAAA,QAAQ,CAACG,IAAT,CAAcjB,YAAY,CAACe,IAAD,CAA1B;AACH;AACJ;AACJ;;AACDU,IAAAA,GAAG,IAAI,CAAP,GAAYjB,WAAW,CAACD,QAAQ,GAACkB,GAAV,CAAvB,GAAwCjB,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAnD;AACAD,IAAAA,YAAY,CAACQ,QAAD,CAAZ;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKT,SAAS,CAACuB,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,kBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAAyC,IAAA,EAAE,EAAE;AAACC,MAAAA,QAAQ,EAAC,WAAV;AAAuBC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAACL;AAAN;AAA7B,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwF;AAAK,IAAA,GAAG,EAAEC,GAAV;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAqC,IAAA,GAAG,EAAC,gBAAzC;AAA0D,IAAA,GAAG,EAAED,GAAG,CAACM,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxF,OADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,GAAG,EAAEN,GAAT;AAAc,IAAA,OAAO,EAAE,MAAMT,WAAW,CAACQ,GAAG,CAAClB,EAAL,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDkB,GAAG,CAACjB,MAAvD,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKiB,GAAG,CAAChB,OAAT,CAFJ,CADJ,CAFJ,CAFJ,CADH,CAFL,eAgBI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAE;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAzC;AAAgE,IAAA,OAAO,EAAE,MAAMb,OAAO,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAhBJ,CADJ;AAsBH,C,CACD;;AAEA","sourcesContent":["import React from 'react'\nimport firebase from \"../firebase\"\nimport { Link } from 'react-router-dom'\nimport './styles.css'\n\nexport default function ReviewsRecentes() {\n    const [vetorStorage,setVetorStorage] = React.useState([])\n    const [vetor,setVetor] = React.useState([])\n    const [vetorCats, setVetorCats] = React.useState([])\n    const [contador, setContador] = React.useState(0)\n    \n    async function carregarDados(){\n        let vetorPostsFeedID = []\n        /*await firebase.database().ref(`posts/feed`).once('value').then(function(snapshot){\n            Object.keys(snapshot.val()).forEach(function(postFeed){\n                vetorPostsFeedID.push(snapshot.val()[postFeed])\n            })\n        })*/\n        vetorPostsFeedID=[{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"},{id:\"id\",titulo:\"titulo\",sinopse:\"sinopse\"}]\n        let vetorAux = [];\n        let cont = contador\n        for(cont; cont<vetorPostsFeedID.length;cont++){\n            if(cont<4){\n                vetorAux.push(vetorPostsFeedID[cont])\n            }\n        }\n        setContador(4)\n        setVetorCats(vetorAux);\n        setVetorStorage(vetorPostsFeedID)\n        console.log(vetorAux)\n    }\n\n    React.useEffect(()=>{\n        carregarDados();\n    },[])\n\n    function handleClick(id) {\n        window.location = `/postView?id=${id}`\n    }\n\n    function verMais() {\n        let vetorAux = [];\n        let cont = contador\n        let aux = 0\n        let i = 0\n        vetorAux=[...vetorCats]\n        if(vetorStorage.length - cont < 4){\n            cont--\n            aux = vetorStorage.length - cont\n            for(let t=0; t<aux;t++){\n                vetorAux.push(vetorStorage[cont])\n                cont++\n            }\n        }\n        else{\n            for(cont; cont<vetorStorage.length;cont++){\n                i++\n                if(i<4){\n                    vetorAux.push(vetorStorage[cont])\n                }\n            }\n        }\n        aux != 0 ?  setContador(contador+aux) : setContador(contador+4)\n        setVetorCats(vetorAux)\n    }\n    return (\n        <div className='containerReviews'>\n            <h1>Postagens recentes</h1>\n            {vetorCats.map((cat, key) => (           \n                <div>\n                    <div className=\"linha\"></div>\n                    <div className='card' >\n                        <Link style={{ textDecoration: 'none' }} to={{pathname:'/postView', state:{post:cat}}} ><img key={key} className=\"cardImage\" alt='imagem do card' src={cat.imagem} />  </Link>           \n                        <div style={{overflowY:\"scroll\"}}>\n                            <div>\n                                <h2 key={key} onClick={() => handleClick(cat.id)}>{cat.titulo}</h2>\n                                <h4>{cat.sinopse}</h4>\n                            </div>\n                        </div>                      \n                 </div>\n                </div>\n            ))}\n            <div className='verMaisContainer' style={{ cursor: 'pointer' }} onClick={() => verMais()} >\n                <h1>Ver mais</h1>\n            </div>\n        </div>\n    )\n}\n//<h2 className='cardTitle'>{cat.title}</h2>\n\n/*hexagono css .nota {\n    width: 50px;\n    height: 27px;\n    background: red;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n    background-color: red;\n    margin-left: 16%;\n  }\n.nota h3 {\n    font: 900 25px Roboto, sans-serif;\n    -webkit-font-smoothing: antialised;\n    color: white;\n}\n.nota:before {\n    content: \"\";\n    position: absolute;\n    top: -13px;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-left: 25px solid transparent;\n    border-right: 25px solid transparent;\n    border-bottom: 13px solid red;\n    \n  }\n.nota:after {\n    content: \"\";\n    position: absolute;\n    bottom: -13px;\n    left: 0;\n    width: 0;\n    height: 0;\n    border-left: 25px solid transparent;\n    border-right: 25px solid transparent;\n    border-top: 13px solid red;\n\n\nHEXAGONO CODIGO: \n<div className='nota'>\n                        <h3>10</h3>\n                    </div>\n}*/ "]},"metadata":{},"sourceType":"module"}